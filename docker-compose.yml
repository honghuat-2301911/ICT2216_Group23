version: "3.8"

services:
  web:
    build: .
    expose:
      - "8000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - mysqldb

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

  mysqldb:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    depends_on:
      - postgresdb
    ports:
      - "8080:9000"   # Web UI
      - "9092:9092"   # Internal communication
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresdb:5432/sonarqube
      SONAR_JDBC_USERNAME: ${SONAR_JDBC_USERNAME}
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD}
    volumes:
      - /home/student23/ICT2216_Group23/sonarqube_data:/opt/sonarqube/data
      - /home/student23/ICT2216_Group23/sonarqube_extensions:/opt/sonarqube/extensions
      - /home/student23/ICT2216_Group23/sonarqube_logs:/opt/sonarqube/logs

  postgresdb:
    container_name: sonarqube_db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /home/student23/ICT2216_Group23/postgresql:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
